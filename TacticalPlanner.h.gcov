        -:    0:Source:TacticalPlanner.h
        -:    1:#ifndef TACTICALPLANNER_H
        -:    2:#define TACTICALPLANNER_H
        -:    3:
        -:    4:#include "BattleStrategy.h"
        -:    5:#include "TacticalMemento.h"
        -:    6:
        -:    7:// Responsibility : Manages the strategic decisions and state changes in battle operations,
        -:    8:// Using the Memento Pattern to save and restore previous states
        -:    9:
        -:   10:class TacticalPlanner { // Originator
        -:   11:    private :
        -:   12:    BattleStrategy* currentStrategy ; // Current State
        -:   13:
        -:   14:    public :
        3:   15:    TacticalPlanner() : currentStrategy(nullptr) {};
        -:   16:    void setStrategy(BattleStrategy* newStrategy);
        -:   17:    TacticalMemento* createMemento();
        -:   18:    void restoreMemento(TacticalMemento* memento);
        -:   19:    BattleStrategy* getCurrentStrategy()const ;
        -:   20:    ~TacticalPlanner();
        -:   21:};  
        -:   22:
        -:   23:#endif
